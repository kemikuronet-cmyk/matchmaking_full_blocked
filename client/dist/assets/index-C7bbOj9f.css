// client/src/App.jsx import React,{useState,useEffect}from "react"; import{io}from "socket.io-client"; import "./App.css"; const socket = io("http://localhost:4000"); function App(){const [loggedIn,setLoggedIn] = useState(false);const [userName,setUserName] = useState("");const [wins,setWins] = useState(0);const [opponent,setOpponent] = useState(null);const [searching,setSearching] = useState(false);useEffect(() => {socket.on("login_ok",(data) => {setUserName(data.name); setWins(data.points || 0); setLoggedIn(true);}); socket.on("matched",(data) => {setOpponent(data.opponent); setSearching(false);}); socket.on("history",(data) => {const winCount = data.history.filter(h => h.result === "win").length; setWins(winCount);}); return () => {socket.off("login_ok"); socket.off("matched"); socket.off("history");};},[]);const handleLogin = (e) =>{e.preventDefault();const name = e.target.username.value.trim();if (name) socket.emit("login",{name})}const handleFindOpponent = () =>{if (searching){setSearching(false);socket.emit("cancel_find");// サーバーにキャンセル通知}else{setSearching(true);socket.emit("find_opponent")}}const handleWinReport = () =>{if (!opponent) return;socket.emit("report_win",{opponentId: opponent.id});setOpponent(null)}const handleLoseReport = () =>{if (!opponent) return;socket.emit("report_loss",{opponentId: opponent.id});setOpponent(null)}if (!loggedIn){return (<div className="login-screen"> <h2>ログイン</h2> <form onSubmit={handleLogin}> <input type="text" name="username" placeholder="ユーザー名" /> <button type="submit">ログイン</button> </form> </div>)}return (<div className="app"> <div className="header"> <div className="username">{userName}</div> <div className="wins">{wins}勝</div> </div> {!opponent ? (<div className="menu-screen"> <button onClick={handleFindOpponent}> {searching ? "対戦相手を探しています… (クリックでキャンセル)" : "対戦相手を探す"} </button> <button onClick={() => socket.emit("request_history")} disabled={searching}> 対戦履歴を確認する </button> </div>) : (<div className="battle-screen"> <h3>対戦相手: {opponent.name}</h3> <button onClick={handleWinReport}>勝利報告</button> <button onClick={handleLoseReport}>代理で勝利報告（相手の勝ち）</button> </div>)} </div>)}export default App; body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica Neue,Arial;margin:0;background:#f7fafc;color:#111827}.container{max-width:960px;margin:24px auto;padding:20px}.card{background:#fff;padding:16px;border-radius:12px;box-shadow:0 6px 18px #0000000f}button{cursor:pointer;padding:8px 12px;border-radius:8px;border:1px solid #e5e7eb;background:#fff}input{padding:8px;border-radius:8px;border:1px solid #e5e7eb}.muted{color:#6b7280;font-size:14px}
